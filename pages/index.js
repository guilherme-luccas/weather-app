import { useState, useEffect } from "react";
import Image from "next/image";
import axios from "axios";
import Head from "next/head";
import { Container } from "../src/components/Container";
import styles from "../styles/Home.module.css";
import Logo from "../public/Logo.png";
import { api } from "./api/hello";

export default function Home() {
  const [cityName, setCityName] = useState("");
  const [temperature, setTemperature] = useState(0);
  const [showCity, setShowCity] = useState(false);
  const [songList, setSongList] = useState([]);

  function handleSubmit(event) {
    event.preventDefault();
    fetchCity(cityName);
  }
  async function fetchCity(city) {
    const res = await api.get(
      `data/2.5/weather?q=${city}&units=metric&appid=6c75139ff916ca0ebbc62725a2e7710d`
    );
    const response = res.data.main.temp;
    setTemperature(Math.round(response));
    setShowCity(true);
    fetchMusic(response);
  }

  useEffect(() => {
    console.log("fetchCity", temperature);
  }, [temperature]);

  function fetchMusic(temp) {
    let genre = "";
    if (temp >= 32) {
      genre = "rock";
    } else if (temp < 32 && temp >= 24) {
      genre = "pop";
    } else if (temp < 24 && temp >= 16) {
      genre = "classical";
    } else if (temp < 16) {
      genre = "lofi";
    }
    var options = {
      method: "GET",
      url: "https://shazam.p.rapidapi.com/search",
      params: { term: `${genre}`, locale: "en-US", offset: "0", limit: "5" },
      headers: {
        "x-rapidapi-host": "shazam.p.rapidapi.com",
        "x-rapidapi-key": "90729b7143msh60ff4dd3115abc6p147bdejsn904f0c4ca92f",
      },
    };

    axios
      .request(options)
      .then(function (response) {
        setSongList(response.data.tracks.hits);
        console.log(response.data.tracks.hits);
      })
      .catch(function (error) {
        console.error(error);
      });
  }

  return (
    <Container>
      <Head>
        <title>WeatherMusic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Image src={Logo} alt="Logo weather music" />
        <div className={styles.inputContainer}>
          <h2>Digite uma cidade:</h2>
          <form onSubmit={handleSubmit}>
            <input
              onChange={(ev) => {
                setCityName(ev.target.value);
                setShowCity(false);
              }}
              name="cityName"
              value={cityName}
              type="text"
              className={styles.input}
            />
            <input type="submit" value="Pesquisar" className={styles.input} />
          </form>
        </div>
        {showCity ? (
          <div style={{ textAlign: "center" }}>
            Em <strong>{cityName.toUpperCase()}</strong> está {temperature}°C
            <div>Sugestões de musicas para esse clima: </div>
            {songList.map((song) => {
              return <div key={song.track.key}>{song.track.title}</div>;
            })}
          </div>
        ) : (
          ""
        )}
      </Container>
    </Container>
  );
}
